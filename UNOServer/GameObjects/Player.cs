///////////////////////////////////////////////////////////
//  Player.cs
//  Implementation of the Class Player
//  Generated by Enterprise Architect
//  Created on:      16-дек-2020 9:59:03
//  Original author: adm-sabitovka
///////////////////////////////////////////////////////////




/// <summary>
/// Игрок
/// </summary>
public class Player {

	public List<Card> Cards{
		//read property
		get{;}
		//write property
		set{;}
	}
	public string Name{
		//read property
		get{;}
		//write property
		set{;}
	}
	public int Position{
		//read property
		get{;}
		//write property
		set{;}
	}
	public Card m_Card;

	public Player(){

	}

	~Player(){

	}

	public virtual void Dispose(){

	}

	/// 
	/// <param name="name"></param>
	public Player(string name){

	}

	/// 
	/// <param name="card"></param>
	public void addCard(Card card){

	}

	/// 
	/// <param name="index"></param>
	public void getCard(int index){

	}

	/// 
	/// <param name="drawPile"></param>
	/// <param name="currentTurn"></param>
	public PlayerTurn PlayTurn(CardDeck drawPile, PlayerTurn currentTurn){

		return null;
	}

	public void removeCard(){

	}

}//end Player