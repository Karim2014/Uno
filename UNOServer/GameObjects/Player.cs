///////////////////////////////////////////////////////////
//  Player.cs
//  Implementation of the Class Player
//  Generated by Enterprise Architect
//  Created on:      16-дек-2020 9:59:03
//  Original author: adm-sabitovka
///////////////////////////////////////////////////////////


using System;
using System.Collections.Generic;
using System.Linq;
using UNOServer.ServerObjects;

namespace UNOServer.GameObjects {

	/// <summary>
	/// Игрок
	/// </summary>
	public class Player {

		public List<Card> Cards { get; set; }
		public string Name { get;  set; }
		public int Position { get; set; }

		/// 
		/// <param name="name"></param>
		public Player(string name) {
			Cards = new List<Card>();
			Name = name;
		}

		/// 
		/// <param name="card"></param>
		public void addCard(Card card) {

		}

		/// 
		/// <param name="index"></param>
		public void getCard(int index) {

		}

		/// 
		/// <param name="drawPile"></param>
		/// <param name="currentTurn"></param>
		public PlayerTurn PlayTurn(CardDeck drawPile, PlayerTurn currentTurn, ServerObject server) {
			//server.TargetMessage($"cmd^Ваш ход. Выберите карту.\nВаши карты: {string.Join(" ", Cards.Select(с => с.DisplayValue))}", this);
			string message = server.GetMessageFromPlayer(
				$"Ваш ход. Выберите карту.\nВаши карты: {string.Join(" ", Cards.Select(с => с.DisplayValue))}", 
				this);
			short index = -1;
			if (message != null) {
                Console.WriteLine(message);
				while(!Int16.TryParse(message, out index)) {
					message = server.GetMessageFromPlayer(
						"Выберите верный номер карты", this);
				}
            }

            Console.WriteLine("{0}, {1}", index, index.GetType());
			return null;
		}

		public void removeCard() {

		}

	}//end Player

}